"0","colnames(SAL_survey$labour.df)"
"1","[1]"
"1"," ""id_house""                       "
"1"," ""labour_activity""                "
"1","
"
"1","[3]"
"1"," ""activity_executed""              "
"1"," ""total_family_workdays_man""      "
"1","
"
"1","[5]"
"1"," ""total_family_workdays_woman""    "
"1"," ""total_family_workdays_kids""     "
"1","
"
"1","[7]"
"1"," ""total_contracted_workdays_man""  "
"1"," ""total_contracted_workdays_woman"""
"1","
"
"0","levels(SAL_survey$labour.df$activity_executed)"
"1","[1]"
"1"," ""Si"""
"1"," ""No"""
"1","
"
"0","labo_wider.df <- pivot_wider(SAL_survey$labour.df,"
"0","                             id_cols = id_house,"
"0","                             names_from = labour_activity,"
"0","                             values_from = c(""activity_executed"","
"0","                                             ""total_family_workdays_man"","
"0","                                             ""total_family_workdays_woman"","
"0","                                             ""total_family_workdays_kids"","
"0","                                            ""total_contracted_workdays_man"","
"0","                                ""total_contracted_workdays_woman"""
"0","                             ),"
"0","                              #names_prefix = labour_activity,"
"0","                             names_sep = ""."")"
"2","Values in `activity_executed` are not uniquely identified; output will contain list-cols.
* Use `values_fn = list(activity_executed = list)` to suppress this warning.
* Use `values_fn = list(activity_executed = length)` to identify where the duplicates arise
* Use `values_fn = list(activity_executed = summary_fun)` to summarise duplicates"
"2","Values in `total_contracted_workdays_man` are not uniquely identified; output will contain list-cols.
* Use `values_fn = list(total_contracted_workdays_man = list)` to suppress this warning.
* Use `values_fn = list(total_contracted_workdays_man = length)` to identify where the duplicates arise
* Use `values_fn = list(total_contracted_workdays_man = summary_fun)` to summarise duplicates"
"2","Values in `total_contracted_workdays_woman` are not uniquely identified; output will contain list-cols.
* Use `values_fn = list(total_contracted_workdays_woman = list)` to suppress this warning.
* Use `values_fn = list(total_contracted_workdays_woman = length)` to identify where the duplicates arise
* Use `values_fn = list(total_contracted_workdays_woman = summary_fun)` to summarise duplicates"
"2","Values in `total_family_workdays_kids` are not uniquely identified; output will contain list-cols.
* Use `values_fn = list(total_family_workdays_kids = list)` to suppress this warning.
* Use `values_fn = list(total_family_workdays_kids = length)` to identify where the duplicates arise
* Use `values_fn = list(total_family_workdays_kids = summary_fun)` to summarise duplicates"
"2","Values in `total_family_workdays_man` are not uniquely identified; output will contain list-cols.
* Use `values_fn = list(total_family_workdays_man = list)` to suppress this warning.
* Use `values_fn = list(total_family_workdays_man = length)` to identify where the duplicates arise
* Use `values_fn = list(total_family_workdays_man = summary_fun)` to summarise duplicates"
"2","Values in `total_family_workdays_woman` are not uniquely identified; output will contain list-cols.
* Use `values_fn = list(total_family_workdays_woman = list)` to suppress this warning.
* Use `values_fn = list(total_family_workdays_woman = length)` to identify where the duplicates arise
* Use `values_fn = list(total_family_workdays_woman = summary_fun)` to summarise duplicates"
"0","SAL_survey$labo_wider.df <- labo_wider.df"
"0",""
